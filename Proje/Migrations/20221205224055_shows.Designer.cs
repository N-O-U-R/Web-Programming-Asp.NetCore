// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proje.Models;

#nullable disable

namespace Proje.Migrations
{
    [DbContext(typeof(ShowContext))]
    [Migration("20221205224055_shows")]
    partial class shows
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AnimeAnimeCategory", b =>
                {
                    b.Property<int>("AnimesanimeId")
                        .HasColumnType("int");

                    b.Property<int>("animeCategoryId")
                        .HasColumnType("int");

                    b.HasKey("AnimesanimeId", "animeCategoryId");

                    b.HasIndex("animeCategoryId");

                    b.ToTable("AnimeAnimeCategory");
                });

            modelBuilder.Entity("MovieMovieCategory", b =>
                {
                    b.Property<int>("MoviesmovieId")
                        .HasColumnType("int");

                    b.Property<int>("movieCategoryId")
                        .HasColumnType("int");

                    b.HasKey("MoviesmovieId", "movieCategoryId");

                    b.HasIndex("movieCategoryId");

                    b.ToTable("MovieMovieCategory");
                });

            modelBuilder.Entity("Proje.Data.AnimeCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AnimeCategory");
                });

            modelBuilder.Entity("Proje.Data.MovieCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MovieCategory");
                });

            modelBuilder.Entity("Proje.Data.TvShowCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TvShowCategory");
                });

            modelBuilder.Entity("Proje.Models.Anime", b =>
                {
                    b.Property<int>("animeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("animeId"));

                    b.Property<int>("animeEndYear")
                        .HasColumnType("int");

                    b.Property<int>("animeEpisodes")
                        .HasColumnType("int");

                    b.Property<string>("animePoster")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("animeRating")
                        .HasColumnType("int");

                    b.Property<int>("animeStartYear")
                        .HasColumnType("int");

                    b.Property<string>("animeStory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("animeTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("animeId");

                    b.ToTable("Animes");
                });

            modelBuilder.Entity("Proje.Models.Movie", b =>
                {
                    b.Property<int>("movieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("movieId"));

                    b.Property<string>("moviePoster")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("movieRating")
                        .HasColumnType("int");

                    b.Property<int>("movieRunningTime")
                        .HasColumnType("int");

                    b.Property<string>("movieStory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("movieTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("movieYear")
                        .HasColumnType("int");

                    b.HasKey("movieId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("Proje.Models.TvShow", b =>
                {
                    b.Property<int>("showId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("showId"));

                    b.Property<int>("showEndYear")
                        .HasColumnType("int");

                    b.Property<int>("showEpisodes")
                        .HasColumnType("int");

                    b.Property<string>("showPoster")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("showRating")
                        .HasColumnType("int");

                    b.Property<int>("showStartYear")
                        .HasColumnType("int");

                    b.Property<string>("showStory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("showTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("showId");

                    b.ToTable("Shows");
                });

            modelBuilder.Entity("TvShowTvShowCategory", b =>
                {
                    b.Property<int>("TvShowsshowId")
                        .HasColumnType("int");

                    b.Property<int>("showCategoryId")
                        .HasColumnType("int");

                    b.HasKey("TvShowsshowId", "showCategoryId");

                    b.HasIndex("showCategoryId");

                    b.ToTable("TvShowTvShowCategory");
                });

            modelBuilder.Entity("AnimeAnimeCategory", b =>
                {
                    b.HasOne("Proje.Models.Anime", null)
                        .WithMany()
                        .HasForeignKey("AnimesanimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proje.Data.AnimeCategory", null)
                        .WithMany()
                        .HasForeignKey("animeCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MovieMovieCategory", b =>
                {
                    b.HasOne("Proje.Models.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesmovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proje.Data.MovieCategory", null)
                        .WithMany()
                        .HasForeignKey("movieCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TvShowTvShowCategory", b =>
                {
                    b.HasOne("Proje.Models.TvShow", null)
                        .WithMany()
                        .HasForeignKey("TvShowsshowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proje.Data.TvShowCategory", null)
                        .WithMany()
                        .HasForeignKey("showCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
